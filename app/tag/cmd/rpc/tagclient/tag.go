// Code generated by taoctl. DO NOT EDIT!
// Source: tag.proto

package tagclient

import (
	"context"

	"backend-learning/blog/app/tag/cmd/rpc/tag"

	"google.golang.org/grpc"
	"manlu.org/tao/zrpc"
)

type (
	GetTagInfoReq  = tag.GetTagInfoReq
	GetTagInfoResp = tag.GetTagInfoResp
	GetTagListReq  = tag.GetTagListReq
	GetTagListResp = tag.GetTagListResp
	TagModel       = tag.TagModel

	Tag interface {
		GetTagList(ctx context.Context, in *GetTagListReq, opts ...grpc.CallOption) (*GetTagListResp, error)
		GetTagInfo(ctx context.Context, in *GetTagInfoReq, opts ...grpc.CallOption) (*GetTagInfoResp, error)
	}

	defaultTag struct {
		cli zrpc.Client
	}
)

func NewTag(cli zrpc.Client) Tag {
	return &defaultTag{
		cli: cli,
	}
}

func (m *defaultTag) GetTagList(ctx context.Context, in *GetTagListReq, opts ...grpc.CallOption) (*GetTagListResp, error) {
	client := tag.NewTagClient(m.cli.Conn())
	return client.GetTagList(ctx, in, opts...)
}

func (m *defaultTag) GetTagInfo(ctx context.Context, in *GetTagInfoReq, opts ...grpc.CallOption) (*GetTagInfoResp, error) {
	client := tag.NewTagClient(m.cli.Conn())
	return client.GetTagInfo(ctx, in, opts...)
}
